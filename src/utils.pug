-
  function fmtnum(n) {
    return n >= 1e6 ? (n / 1e6).toFixed(1) + 'mil' :
         n >= 1e3 ? (n / 1e3).toFixed(1) + 'k' :
         n;
  }
- var fmttxt = (n,t)=>`${t}${n==1?'':'s'}`
- var stripPrefix = (s, p) => s.startsWith(p) ? s.slice(p.length) : s;
-
  function timeDifference(current, previous) {
    if (!current || !previous) {
        return '';
    }
    return formatTime(current - previous)
  }
-
  function formatTime(elapsed, precision = 0) {
    var msPerSecond = 1000;
    var msPerMinute = msPerSecond * 60;
    var msPerHour = msPerMinute * 60;
    var msPerDay = msPerHour * 24;
    var msPerMonth = msPerDay * 30;
    var msPerYear = msPerDay * 365;
    var unit = '';
    var value = 0;
    if (elapsed < msPerSecond) {
      value = elapsed;
      unit = 'ms';
    } else if (elapsed < msPerMinute) {
         value = elapsed / msPerSecond;
         unit = 's';
    } else if (elapsed < msPerHour) {
         value = elapsed / msPerMinute;
         unit = 'm';
    } else if (elapsed < msPerDay ) {
         value = elapsed / msPerHour;
         unit = 'h';
    } else if (elapsed < msPerMonth) {
        value = elapsed / msPerDay;
        unit = 'd';
    } else if (elapsed < msPerYear) {
        value = elapsed / msPerMonth;
        unit = 'mo';
    } else {
        value = elapsed / msPerYear;
        unit = 'y';
    }

    if (precision > 0) {
      precisionValue = Number('1e' + precision);
      return Math.round(value * precisionValue) / precisionValue + unit;
    }
    else {
      return Math.round(value) + unit;
    }
  }
-
  function encodeQueryParams(obj) {
    return Object.keys(obj)
      .map(key => encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]))
      .join('&');
  }
